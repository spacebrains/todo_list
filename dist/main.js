!function(s){var t={};function e(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return s[i].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=s,e.c=t,e.d=function(s,t,i){e.o(s,t)||Object.defineProperty(s,t,{enumerable:!0,get:i})},e.r=function(s){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})},e.t=function(s,t){if(1&t&&(s=e(s)),8&t)return s;if(4&t&&"object"==typeof s&&s&&s.__esModule)return s;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:s}),2&t&&"string"!=typeof s)for(var n in s)e.d(i,n,function(t){return s[t]}.bind(null,n));return i},e.n=function(s){var t=s&&s.__esModule?function(){return s.default}:function(){return s};return e.d(t,"a",t),t},e.o=function(s,t){return Object.prototype.hasOwnProperty.call(s,t)},e.p="",e(e.s=0)}([function(s,t,e){"use strict";e.r(t);class i{constructor(s=""){this.task=s,this.id=Math.random(),this.finished=!1}}class n extends i{constructor(s="",t=+new Date+1e3){super(),this.task=s,this.finalTime=t}}class o extends i{constructor(s=""){super(),this.task=s,this.subTasks=[]}addSubTask(s=""){const t=i(s);return this.subTasks.push(t),t}remove(s){this.subTasks=this.subTasks.filter(t=>t.id!==+s)}deleteFinished(){this.subTasks=this.subTasks.filter(s=>!s.finished)}allFinished(){this.finished=this.subTasks.every(s=>s.finished)}search(s){return this.todos.filter(t=>t.task.toLowerCase().indexOf(s.toLowerCase()))}}const a=new class{constructor(){this.todos=[],this.load()}addTask(s=""){const t=new i(s);return this.todos.push(t),t}addTaskWithSubTasks(s=""){const t=new o(s);return this.todos.push(t),t}addSubTask(s,t=""){let e;return this.todos.forEach(i=>{i.id===s&&i instanceof o&&(e=i.addSubTask(t))}),e||console.warn("not found task with id:"+s)}addTaskWithTimer(s="",t=+new Date+1e3){const e=new n(s,t);return this.todos.push(e),e}remove(s){this.todos=this.todos.filter(t=>(t instanceof o&&t.remove(),t.id!==+s))}deleteFinished(){this.todos=this.todos.filter(s=>(s instanceof o&&s.deleteFinished(),!s.finished))}search(s){return this.todos.filter(t=>t instanceof o?t.search(s):t.task.toLowerCase().indexOf(s.toLowerCase()))}save(){const s=this.todos.map(s=>{const t={task:s.task,finished:s.finished};return s instanceof n?(t.type="TaskWithTimer",t.finalTime=s.time):s instanceof o?(t.type="TaskWithSubTasks",t.subTasks=s.subTasks.map(s=>({task:s.task,finished:s.finished}))):t.type="Task",t});localStorage.data=JSON.stringify({todos:s})}load(){if(!localStorage.data)return;const s=JSON.parse(localStorage.data).todos;this.todos=s.map(s=>{if("Task"===s.type){const t=this.addTask(s.task);return t.finished=s.finished,t}if("TaskWithSubTasks"===s.type){const t=this.addTaskWithSubTasks(s.task);return t.finished=s.finished,s.subTasks.forEach(s=>{t.addSubTask(s.task).finished=s.finished}),t}if("TaskWithTimer"===s.type){const t=this.addTaskWithTimer(s.task,s.finalTime);return t.finished=s.finished,t}})}};console.log(a)}]);